# install tpm: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# Press prefix + I (capital i, as in Install) to fetch the plugin
# Press prefix + alt + u (lowercase u as in uninstall) to remove the plugin.
# prefix + U updates plugins

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'aserowy/tmux.nvim'
set-option -g @plugin 'b0o/tmux-autoreload'

set -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ',*:Tc'

set -g allow-passthrough on

# set -g default-terminal "xterm-kitty"
set-option -sa terminal-overrides ",xterm*:Tc"
setw -g mode-keys vi
set -g mouse on
set -g base-index 1
setw -g pane-base-index 1
set -sg escape-time 0
set -g set-clipboard on
set -g detach-on-destroy off
# set -g focus-events on
set -g @yank_selection 'clipboard' # or 'primary' 'secondary' or 'clipboard'
set -g @yank_selection_mouse 'clipboard' # or 'clipboard' 'primary' or 'secondary'


set-option -g prefix C-a
bind-key C-a send-prefix
bind Escape copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Config for nvim-tmux
# navigation
set -g @tmux-nvim-navigation true
set -g @tmux-nvim-navigation-cycle true
set -g @tmux-nvim-navigation-keybinding-left 'C-h'
set -g @tmux-nvim-navigation-keybinding-down 'C-j'
set -g @tmux-nvim-navigation-keybinding-up 'C-k'
set -g @tmux-nvim-navigation-keybinding-right 'C-l'

# resize
set -g @tmux-nvim-resize true
set -g @tmux-nvim-resize-step-x 1
set -g @tmux-nvim-resize-step-y 1
set -g @tmux-nvim-resize-keybinding-left 'M-h'
set -g @tmux-nvim-resize-keybinding-down 'M-j'
set -g @tmux-nvim-resize-keybinding-up 'M-k'
set -g @tmux-nvim-resize-keybinding-right 'M-l'


# Kill without confirm
bind-key & kill-window
bind-key x kill-pane


# Config for catppuccin
set -g status-right-length 100
set -g status-left-length 50
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_application}"
set -ag status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_uptime}"
set -g status-style 'bg=terminal'

set -g @catppuccin_flavor 'mocha'

# status left style
set -g status-left-length 100
set -g status-left ""
set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_red},fg=#{@thm_mantle},bold]  #S },#{#[bg=#{@thm_mantle},fg=#{@thm_green}]  #S }}"
# set -ga status-left "#[bg=#{@thm_mantle},fg=#{@thm_overlay_0},none]│"
# set -ga status-left "#[bg=#{@thm_mantle},fg=#{@thm_maroon}]  #{pane_current_command} "
set -ga status-left "#[bg=#{@thm_mantle},fg=#{@thm_overlay_0},none]│"
set -ga status-left "#[bg=#{@thm_mantle},fg=#{@thm_blue}]  #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}}} "

# status right style
set -g status-right-length 100
set -g status-right ""
# set -ga status-right "#{?#{e|>=:10,#{battery_percentage}},#{#[bg=#{@thm_red},fg=#{@thm_mantle}]},#{#[bg=#{@thm_mantle},fg=#{@thm_pink}]}} #{battery_icon} #{battery_percentage} "
# set -ga status-right "#[bg=#{@thm_mantle},fg=#{@thm_overlay_0}, none]│"
# set -ga status-right "#[bg=#{@thm_mantle}]#{?#{==:#{online_status},ok},#[fg=#{@thm_mauve}] 󰖩 on ,#[fg=#{@thm_red},bold]#[reverse] 󰖪 off }"
# set -ga status-right "#[bg=#{@thm_mantle},fg=#{@thm_overlay_0}, none]│"
set -ga status-right "#[bg=#{@thm_mantle},fg=#{@thm_blue}] 󰭦 %Y-%m-%d 󰅐 %H:%M "

# window style
set -wg automatic-rename on
set -g automatic-rename-format ''
set -g window-status-separator ''
set -g status-justify 'absolute-centre'
set -g @catppuccin_window_status_style 'custom'
set -g @catppuccin_window_flags ""
set -g @catppuccin_window_number ""
set -g @catppuccin_window_text "#[fg=#{@thm_rosewater},bg=#{@thm_mantle}] #I#{?#{!=:#{window_name},},: #W,} "
set -g @catppuccin_window_current_number ""
set -g @catppuccin_window_current_text "#[fg=#{@thm_mantle},bg=#{@thm_peach}] #I#{?#{!=:#{window_name},},: #W,} "

# Configure Online
set -g @online_icon "ok"
set -g @offline_icon "nok"

# Config fzf
TMUX_FZF_OPTIONS="-p -w 70% -h 50% -m"
TMUX_FZF_LAUNCH_KEY="C-f"
TMUX_FZF_PREVIEW=0

unbind-key "w"

# bind-key "w" run-shell -b "$HOME/.tmux/plugins/tmux-fzf/scripts/window.sh switch"

bind-key "r" command-prompt -I'#W' { rename-window -- '%%' }

# config for tmux-fingers
set -g @fingers-key "f"

# Popup
bind "g" display-popup -d "#{pane_current_path}" -w 83% -h 90% -E "lazygit"
bind "m" display-popup -d "#{pane_current_path}" -w 80% -h 90% -E "lazydocker"

# https://gist.github.com/LintaoAmons/22f6184b26bd5b93d8fe9f9276f50f75
# bind-key -N 'Toggle opencode window' C-a if-shell -F '#{==:#{session_name},opencode}' {
#     detach-client
# } {
#     display-popup -d "#{pane_current_path}" -xC -yC -w 80% -h 75% -E 'tmux attach-session -t opencode || tmux new-session -s opencode opencode'
# }

bind-key C-a run-shell 'if [[ "$(tmux display-message -p \"#{window_name}\")" == "opencode" ]]; then tmux last-window; else tmux select-window -t opencode 2>/dev/null || tmux new-window -n opencode opencode; fi'


# Sesh
set -g @sesh-fzf 'sesh connect "$( \
  sesh list --icons | fzf-tmux -p 85%,85% --no-border \
    --ansi \
    --list-border \
    --no-sort --prompt "⚡  " \
    --color "list-border:6,input-border:3,preview-border:4,header-bg:-1,header-border:6" \
    --input-border \
    --header-border \
    --bind "tab:down,btab:up" \
    --bind "ctrl-c:abort" \
    --bind "ctrl-a:change-prompt(⚡  )+reload(sesh list --icons)" \
    --bind "ctrl-t:change-prompt(  )+reload(sesh list -t --icons)" \
    --bind "ctrl-g:change-prompt(⚙️  )+reload(sesh list -c --icons)" \
    --bind "ctrl-x:change-prompt(  )+reload(sesh list -z --icons)" \
    --bind "ctrl-f:change-prompt(  )+reload(fd -H -d 2 -t d -E .Trash . ~)" \
    --bind "ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(⚡  )+reload(sesh list --icons)" \
    --preview-window "right:70%" \
    --preview "sesh preview {}" \
)"'

bind-key "C-s" run-shell '#{@sesh-fzf}'
bind-key "w" run-shell '#{@sesh-fzf}'

unbind-key q
unbind-key l
bind -N "last-session (via sesh)" q run-shell "sesh last"



# bootstrap tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

bind l run-shell "sesh last"
